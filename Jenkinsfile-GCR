pipeline {
    agent any
    
    options {
        timeout(time: 10, unit: 'MINUTES')
    }
    
    environment {
        DOCKER_REGISTRY = "us.gcr.io"  // Google Container Registry
        IMAGE_NAME = "lili-gcr-repo"  // Name of your Docker image
        IMAGE_TAG = "latest"  // Tag for your Docker image
        GCP_PROJECT_ID = "lili-devops" // Your Google Cloud Platform project ID
    }
    
    stages {
        stage('SCM Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/lily4499/node-express-docker-backup.git'
            }
        }
        
        stage('Build Docker image') {
            steps {
                script {
                    docker.build("${DOCKER_REGISTRY}/${GCP_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}")
                }
            }
        }

        stage('Trivy Scan (Aqua)') {
            steps {
                sh "trivy image ${DOCKER_REGISTRY}/${GCP_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}"
            }
        }

        stage('Push to GCR') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'lili-gcp-service-account-key-json', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                        sh """
                            gcloud auth activate-service-account --key-file=\$GOOGLE_APPLICATION_CREDENTIALS
                            gcloud auth configure-docker
                            docker push ${DOCKER_REGISTRY}/${GCP_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}
                        """
                    }
                }
            }
        }
    }
}
