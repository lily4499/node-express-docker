pipeline {
    agent any
    
    options {
        timeout(time: 10, unit: 'MINUTES')
    }
    
    environment {
        // Define any environment variables needed
        DOCKER_REGISTRY = "gcr.io"  // Google Container Registry
        IMAGE_NAME = "node-express-app"  // Name of your Docker image
        IMAGE_TAG = "latest"  // Tag for your Docker image
        GCP_PROJECT_ID = "lili-devops" // Your Google Cloud Platform project ID
        GCP_SERVICE_ACCOUNT_KEY = credentials('lili-gcp-private-key') // Jenkins credentials ID for GCP service account key
    }
    
    
    
    stages {
        stage('SCM Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/lily4499/node-express-docker-backup.git'
            }
        }
        
        stage('Build Docker image') {
            steps {
                script {
                      docker.build("${DOCKER_REGISTRY}/${GCP_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}")
                }
            }
        }

        stage('Trivy Scan (Aqua)') {
            steps {
                sh 'trivy image ${DOCKER_REGISTRY}/${GCP_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}'
            }
        }

        stage('Push to GCR') {
            steps {
                script {
                    // Authenticate Docker with the GCR service account key
                    withCredentials([googleServiceAccount(credentialsId: 'lili-gcp-private-key', scope: 'https://www.googleapis.com/auth/cloud-platform')]) {
                        // Push the Docker image to GCR
                        docker.withRegistry("https://gcr.io", "lili-gcp-private-key") {
                            docker.image("${GCR_REPO}:${BUILD_NUMBER}").push()
                        }
                    }
                }
            }
        }
       
      
        
      
    }
}
